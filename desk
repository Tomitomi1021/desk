#!/bin/bash

SCRATCH="${HOME}/.scratch"
DESKS="${SCRATCH}/desks"
MACROS="${SCRATCH}/macros"

if [ ${SHELL} == "" ]; then
	SHELL="/bin/bash"
fi

function log(){
	echo $1 1>&2
}

function die(){
	log $1
	kill -s 2 ${BASHPID}
}

function requireDir(){
	if [ ! -e $1 ]; then
		mkdir $1
		log "ディレクトリを作成しました。"$1
	elif [ ! -d $1 ]; then
		log "ファイルが既に存在します。"$1
		read -p "削除しますか？[y/N]" input 1>&2
		case ${input} in
			[yY]*)
				rm $1
				log "削除しました。"
				mkdir $1
				log "ディレクトリを作成しました。"$1
				;;
			*)
				die "中断しました。";;
		esac
	fi
}

function requireDirs(){
	requireDir ${SCRATCH}
	requireDir ${DESKS}
	requireDir ${MACROS}
}

function generate(){
	requireDirs
	DATE=`date +"%Y-%m-%d"`

	NO=0

	while [ -e ${DESKS}/${DATE}-${NO} ];
	do
		NO=$((${NO}+1))
	done

	RES="${DESKS}/${DATE}-${NO}"
	mkdir ${RES}
	echo ${RES}
}


function getpathByAbsoluteID(){
	if [ -e "${DESKS}/$1" ]; then
		echo "${DESKS}/$1"
		return
	else
		die "そのようなデスクは存在しません。(絶対ID:$1)"
	fi
}

function getpathByRelativeID(){
	if [ $1 -ge `ls ${DESKS}|wc -l` ]; then
		die "そのようなデスクは存在しません。(相対ID:$1)"
	fi
	item=`ls ${DESKS}|sort -rV |head -n $(($1 + 1))|tail -n 1`
	if [ "${item}" != "" ]; then
		echo "${DESKS}/${item}"
		return
	else
		die "そのようなデスクは存在しません。(相対ID:$1)"
	fi
}

function getpath(){
	requireDirs
	if [ "$1" == "" ]; then
		getpathByRelativeID 0
	else
		if echo $1 | grep -e "^[0-9]*-[0-9]*-[0-9]*-[0-9]*$" 1>/dev/null; then
			getpathByAbsoluteID $1
		elif echo $1 | grep -e "^[0-9]*$" 1>/dev/null; then
			getpathByRelativeID $1
		else
			die "引数が無効です。($1)"
		fi
	fi
}

function enter(){
	cd $1
	${SHELL}
}

function godesk(){
	enter $(getpath $1)
}

function lsdesk(){
	ls --color=auto $(getpath $1)
}

function link(){
	ln -s $(getpath $1) $2
}

function list(){
	requireDirs
	no=0
	for deskName in `ls ${DESKS}|sort -rV`
	do
		echo -e "${no}\t${deskName}"
		no=$((${no} + 1))
	done
}

function search(){
	requireDirs
	find ${DESKS} 2>/dev/null|grep -e $1 2>/dev/null|sed "s/^$(echo "${DESKS}/"|sed 's/\//\\\//g')//"
}

case $1 in
	"make")
		generate;;
	"enter")
		godesk $2;;
	"view")
		lsdesk $2;;
	"link")
		if [ $# -eq 3 ]; then
			link $2 $3
		elif [ $# -eq 2 ]; then
			link "" $2
		fi;;
	"list")
		list;;
	"search")
		search $2;;
	"macro")
		requireDirs
		case $2 in
			"add")
				cp $4 ${MACROS}/$3;;
			"del")
				rm ${MACROS}/$3;;
			"list")
				ls ${MACROS};;
			*)
				echo "使用法: desk macro [add <マクロ名> <スクリプト>] [del <マクロ名>] [list]"
				echo "add	スクリプトをマクロとして登録します。"
				echo "del	マクロを削除します。"
				echo "list	マクロを一覧表示します。"
				;;
		esac;;
	*)
		if [ "$1" != "" -a -e "${MACROS}/$1" ]; then
			requireDirs
			source ${MACROS}/$1
			macro_main "${@:2}"
		else
			echo "使用法: desk <コマンド> [<引数>]"
			echo "コマンド一覧:"
			echo "make	新しいデスクを作成します。"
			echo "enter	デスクに移動します。"
			echo "view	デスクを閲覧します。"
			echo "link	デスクへのリンクを貼ります。"
			echo "list	デスクの一覧を表示します。"
			echo "macro	マクロの管理をします。"
		fi
		;;
esac
